name: Build and Release

on:
  push:
    branches:
      - main

jobs:
  build_and_release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Calculate the next version and create a tag
      - name: Tag new version
        id: tag_version
        uses: WyriHaximus/github-action-next-semvers@v1.2.1
        with:
          version: ${{ github.ref }}
      
      - name: Create a new patch
        run: git tag ${{ steps.tag_version.outputs.v_patch }}
      
      - name: Push tag to GitHub
        run: git push origin ${{ steps.tag_version.outputs.v_patch }}
        
      # Build the project
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.x'

      - name: Build
        working-directory: "./CodeLearningSpectaclesWPF"
        run: dotnet build -c Release

      # Create a release
      - name: Create Release
        if: github.ref == 'refs/heads/main'
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          tag_name: ${{ steps.tag_version.outputs.v_patch }}
          release_name: ${{ steps.tag_version.outputs.v_patch }}
          draft: false
          prerelease: false

      # Upload asset to the release
      - name: Upload Release Asset
        if: github.ref == 'refs/heads/main'
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: CodeLearningSpectaclesWPF/CodeLearningSpectaclesWPF/bin/Release/net8.0-windows/CodeLearningSpectaclesWPF.exe
          asset_name: CodeLearningSpectaclesWPF.exe
          asset_content_type: application/octet-stream
